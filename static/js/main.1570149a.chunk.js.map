{"version":3,"sources":["PaginatedComponent.jsx","App.js","reportWebVitals.js","index.js"],"names":["PaginatedComponent","props","match","search","history","location","page","params","queryString","parse","undefined","limit","useState","pokemonData","setPokemonData","totalPages","setTotalPages","actualPage","setActualPage","setNextPage","setPreviousPage","useEffect","axios","get","then","response","console","log","data","count","results","newPokemonData","forEach","pokemon","index","id","name","sprite","Math","ceil","Object","keys","map","Typography","Pagination","parseInt","defaultPage","onChange","event","renderItem","item","PaginationItem","component","Link","to","App","basename","exact","path","render","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","createBrowserHistory","ReactDOM","StrictMode","document","getElementById"],"mappings":"kSAsGeA,EA7FY,SAACC,GAAW,IAC3BC,EAAUD,EAAVC,MAGAC,GAFYF,EAAZG,QACaH,EAAbI,SACAF,QAEFG,GADaJ,EAAXK,OACOC,IAAYC,MAAMN,GAA3BG,WACOI,IAATJ,IAAoBA,EAAO,GAE/B,IAAMK,EAAQ,GAToB,EAUIC,wBAASF,GAVb,mBAU3BG,EAV2B,KAUdC,EAVc,OAWEF,wBAASF,GAXX,mBAW3BK,EAX2B,KAWfC,EAXe,OAYEJ,mBAASN,GAZX,mBAY3BW,EAZ2B,KAYfC,EAZe,OAaFN,mBAASK,EAAa,GAbpB,mBAajBE,GAbiB,aAcMP,mBAAS,MAdf,mBAcbQ,GAda,WAgBlCC,qBAAU,WACNP,OAAeJ,GACfY,IAAMC,IAAN,kDAAqDZ,EAArD,mBAAsEA,EAAQL,EAAQK,IACjFa,MAAK,SAAUC,GACZC,QAAQC,IAAR,kDAAuDhB,EAAvD,mBAAwEA,EAAQL,EAAQK,IADlE,IAEdiB,EAASH,EAATG,KACAC,EAAUD,EAAVC,MACAC,EAAYF,EAAZE,QACFC,EAAiB,GACvBD,EAAQE,SAAQ,SAACC,EAASC,GACtBH,EAAeG,EAAQ,GAAK,CACxBC,GAAMxB,EAAQL,EAAQK,EAASuB,EAAQ,EACvCE,KAAMH,EAAQG,KACdC,OAAO,kFAAD,OAAsF1B,EAAQL,EAAQK,EAASuB,EAAQ,EAAvH,YAGdpB,EAAeiB,GACf,IAAIhB,EAAauB,KAAKC,KAAKV,EAAQlB,GACnCK,EAAcD,GAEdG,EAAcZ,QAGvB,CAAiBA,IAmBpB,OACI,qCAEQO,EACI2B,OAAOC,KAAK5B,GAAa6B,KAAI,SAACT,EAASC,GAAV,OACzB,eAACS,EAAA,EAAD,WAAyB9B,EAAYoB,GAASE,GAA9C,MAAqDtB,EAAYoB,GAASG,OAAzDF,MAEnB,cAACS,EAAA,EAAD,yBAIN5B,EAAa,EAET,cAAC6B,EAAA,EAAD,CACIf,MAAOd,EACPT,KAAMuC,SAAS5B,GACf6B,YAAa,EACbC,SA1BK,SAACC,EAAO1C,GAE7BoB,QAAQC,IAAI,YACUR,EAAtBb,IAASS,EAAyBT,EAAO,EAAiB,MAC7Cc,EAAJ,IAATd,EAA6BA,EAAO,EAAqB,OAuBzC2C,WAAY,SAACC,GAAD,OACR,cAACC,EAAA,EAAD,aACIC,UAAWC,IACXC,GAAE,mBAAaJ,EAAK5C,KAAL,gBAA2B4C,EAAK5C,SAC3C4C,YAKhBxC,MChEL6C,MA1Bf,WACE,OACE,cAAC,IAAD,CAAYC,SAAS,IAArB,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CACEC,OAAK,EACLC,KAAK,IACLC,OAAQ,SAAC1D,GAAD,OAAW,cAAC,EAAD,eAAwBA,OAE7C,cAAC,IAAD,CACEwD,OAAK,EACLC,KAAK,WACLC,OAAQ,SAAC1D,GAAD,OAAW,cAAC,EAAD,eAAwBA,OAI7C,cAAC,IAAD,CAAO0D,OAAQ,SAAC1D,GAAD,OAAW,qDCRnB2D,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBtC,MAAK,YAAkD,IAA/CuC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,OCARzD,EAAUgE,cAEhBC,IAASV,OACP,cAAC,IAAMW,WAAP,UACE,cAAC,IAAD,CAAQlE,QAASA,EAAjB,SACE,cAAC,EAAD,QAGJmE,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.1570149a.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport { Typography } from '@material-ui/core';\r\nimport Pagination from '@material-ui/lab/Pagination';\r\nimport { PaginationItem } from '@material-ui/lab';\r\nimport { Link, useLocation } from 'react-router-dom';\r\nimport { MemoryRouter } from 'react-router';\r\nimport queryString from 'query-string';\r\n\r\nconst PaginatedComponent = (props) => {\r\n    const { match } = props;\r\n    const { history } = props;\r\n    const { location } = props;\r\n    const { search } = location;\r\n    const { params } = match;\r\n    let { page } = queryString.parse(search);    \r\n    if (page === undefined) page = 1\r\n\r\n    const limit = 10;\r\n    const [pokemonData, setPokemonData] = useState(undefined);\r\n    const [totalPages, setTotalPages] = useState(undefined);\r\n    const [actualPage, setActualPage] = useState(page);\r\n    const [nextPage, setNextPage] = useState(actualPage + 1);\r\n    const [previousPage, setPreviousPage] = useState(null);\r\n    //if(pathname === '/pokemon' || pathname === '/') pathname = `/pokemon/page/${actualPage}`;\r\n    useEffect(() => {\r\n        setPokemonData(undefined);\r\n        axios.get(`https://pokeapi.co/api/v2/pokemon?limit=${limit}&offset=${(limit * page) - limit}`)\r\n            .then(function (response) {\r\n                console.log(`https://pokeapi.co/api/v2/pokemon?limit=${limit}&offset=${(limit * page) - limit}`)\r\n                const { data } = response;\r\n                const { count } = data;\r\n                const { results } = data;\r\n                const newPokemonData = {};\r\n                results.forEach((pokemon, index) => {\r\n                    newPokemonData[index + 1] = {\r\n                        id: ((limit * page) - limit) + index + 1,\r\n                        name: pokemon.name,\r\n                        sprite: `https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/shiny/${((limit * page) - limit) + index + 1}.png`\r\n                    }\r\n                });\r\n                setPokemonData(newPokemonData);\r\n                let totalPages = Math.ceil(count / limit);\r\n                setTotalPages(totalPages);\r\n                //history.push(`${pathname}`)\r\n                setActualPage(page);\r\n\r\n            });\r\n    }, [/*actualPage,*/ page]);\r\n    //console.log(pokemonData)\r\n    /*console.log(props)\r\n    console.log(`Total:${totalPages}`);\r\n    console.log(`Actual:${actualPage}`);\r\n    console.log(`Next:${nextPage}`);\r\n    console.log(`Previous:${previousPage}`);\r\n    console.log(`PageNumber:${page}`);*/\r\n    //console.log(`${pathname}`);\r\n\r\n    const handlePageChange = (event, page) => {\r\n        //setActualPage(page);\r\n        console.log(\"changing\")\r\n        page !== totalPages ? setNextPage(page + 1) : setNextPage(null);\r\n        page !== 1 ? setPreviousPage(page - 1) : setPreviousPage(null);\r\n        //pathname = `/pokemon?page=${page}`;\r\n        //history.push(`${pathname}`)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {\r\n                pokemonData ?\r\n                    Object.keys(pokemonData).map((pokemon, index) => (\r\n                        <Typography key={index}>{pokemonData[pokemon].id} . {pokemonData[pokemon].name}</Typography>\r\n                    ))\r\n                    : <Typography>Loading...</Typography>\r\n            }\r\n\r\n            {\r\n                totalPages > 0 ?\r\n\r\n                    <Pagination\r\n                        count={totalPages}\r\n                        page={parseInt(actualPage)}\r\n                        defaultPage={1}\r\n                        onChange={handlePageChange}\r\n                        renderItem={(item) => (\r\n                            <PaginationItem\r\n                                component={Link}\r\n                                to={`/pokemon${item.page === 1 ? `?page=${item.page}` : `?page=${item.page}`}`}\r\n                                {...item}\r\n                            />\r\n                        )}\r\n                    />\r\n                    :\r\n                    undefined\r\n\r\n            }\r\n        </>\r\n\r\n    );\r\n}\r\n\r\nexport default PaginatedComponent;","import React from 'react';\nimport { HashRouter, Route, Switch } from 'react-router-dom';\nimport PaginatedComponent from './PaginatedComponent';\n\nfunction App() {\n  return (\n    <HashRouter basename=\"/\">\n      <Switch>\n        <Route\n          exact\n          path=\"/\"\n          render={(props) => <PaginatedComponent {...props} />}\n        />\n        <Route\n          exact\n          path=\"/pokemon\"\n          render={(props) => <PaginatedComponent {...props} />}\n        />\n\n\n        <Route render={(props) => <div>Not found</div>} />\n\n      </Switch>\n    </HashRouter>\n\n\n\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { createBrowserHistory } from \"history\";\nimport { Router } from 'react-router-dom';\n\nconst history = createBrowserHistory();\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router history={history}>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}